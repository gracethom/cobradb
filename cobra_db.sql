-- MySQL Script generated by MySQL Workbench
-- Tue Mar 31 19:31:32 2015
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema cobra
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `cobra` ;

-- -----------------------------------------------------
-- Schema cobra
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cobra` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
SHOW WARNINGS;
USE `cobra` ;



-- -----------------------------------------------------
-- Table login information for users `cobra`.`members` & login_attempts
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`members` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`members` (
  `id_member` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(30) NOT NULL,
  `email` VARCHAR(50) NOT NULL,
  `password` CHAR(128) NOT NULL,
  `salt` CHAR(128) NOT NULL,
  PRIMARY KEY (`id_member`))
ENGINE = InnoDB;

SHOW WARNINGS;

DROP TABLE IF EXISTS `cobra`.`login_attempts` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`login_attempts` (
  `id_user` INT(11) NOT NULL,
  `time` VARCHAR(30) NOT NULL)
ENGINE = InnoDB;

SHOW WARNINGS;



-- -----------------------------------------------------
-- Table `cobra`.`person_dim`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`person_dim` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`person_dim` (
  `id_person_dim` INT NOT NULL AUTO_INCREMENT,
  `person_auth` VARCHAR(45) NULL,
  `surname` VARCHAR(45) NULL,
  `forename` VARCHAR(45) NULL,
  `person_title` VARCHAR(45) NULL,
  `person_role` VARCHAR(45) NULL,
  `alt_name` VARCHAR(45) NULL, -- if signed with a false name
  `birth_year` VARCHAR(45) NULL,
  `byear_source` VARCHAR(45) NULL,
  `m_f` VARCHAR(45) NULL,
  `gender_note` VARCHAR(255) NULL,
  `race` VARCHAR(45) NULL,
  `race_note` VARCHAR(255) NULL,
  `ethnicity` VARCHAR(45) NULL,
  `ethnicity_note` VARCHAR(255) NULL,
  PRIMARY KEY (`id_person_dim`))
ENGINE = InnoDB;

SHOW WARNINGS;


-- -----------------------------------------------------
-- MUTABLE ATTRIBUTES IN SEPARATE TABLES RELATING TO PERSON
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `cobra`.`occu_dim`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`occu_dim` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`occu_dim` (
  `id_occu_dim` INT NOT NULL AUTO_INCREMENT,
  `occupation` VARCHAR(45) NULL,
  PRIMARY KEY (`id_occu_dim`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `cobra`.`person_occu`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`person_occu` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`person_occu` (
  `id_person_occu` INT NOT NULL AUTO_INCREMENT,
  `id_person_dim` INT NOT NULL,
  `id_occu_dim` INT NOT NULL,
  `occu_note` VARCHAR(255) NULL,
  PRIMARY KEY (`id_person_occu`),
  CONSTRAINT `fk_occu_dim`
    FOREIGN KEY (`id_occu_dim`)
    REFERENCES `cobra`.`occu_dim` (`id_occu_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_occu_dim`
    FOREIGN KEY (`id_person_dim`)
    REFERENCES `cobra`.`person_dim` (`id_person_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;



-- -----------------------------------------------------
-- Table `cobra`.`grade_dim`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`grade_dim` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`grade_dim` (
  `id_grade_dim` INT NOT NULL AUTO_INCREMENT,
  `grade` VARCHAR(45) NULL,
  PRIMARY KEY (`id_grade_dim`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `cobra`.`person_grade`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`person_grade` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`person_grade` (
  `id_person_grade` INT NOT NULL AUTO_INCREMENT,
  `id_person_dim` INT NOT NULL,
  `id_grade_dim` INT NOT NULL,
  `grade_note` VARCHAR(255) NULL,
  PRIMARY KEY (`id_person_grade`),
  CONSTRAINT `fk_grade_dim`
    FOREIGN KEY (`id_grade_dim`)
    REFERENCES `cobra`.`grade_dim` (`id_grade_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_grade_dim`
    FOREIGN KEY (`id_person_dim`)
    REFERENCES `cobra`.`person_dim` (`id_person_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- END OF MUTABLE ATTRIBUTES
-- -----------------------------------------------------




-- -----------------------------------------------------
-- Table `cobra`.`location_dim`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`location_dim` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`location_dim` (
  `id_location_dim` INT NOT NULL AUTO_INCREMENT,
  `street` VARCHAR(45) NULL,
  `city` VARCHAR(45) NULL,
  `state` VARCHAR(45) NULL,
  `country` VARCHAR(45) NULL,
  `postal_code` VARCHAR(45) NULL,
  PRIMARY KEY (`id_location_dim`))
ENGINE = InnoDB;

SHOW WARNINGS;


-- -----------------------------------------------------
-- Table `cobra`.`phys_loc_dim`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`phys_loc_dim` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`phys_loc_dim` (
  `id_phys_loc_dim` INT NOT NULL AUTO_INCREMENT,
  `phys_loc_name` VARCHAR(45) NULL,
  `phone` VARCHAR(45) NULL,
  `repository` VARCHAR(45) NULL,
  `coll_name` VARCHAR(45) NULL,
  `coll_num` VARCHAR(45) NULL,
  `id_location_dim`INT NOT NULL,
  PRIMARY KEY (`id_phys_loc_dim`),
  CONSTRAINT `fk_phys_loc_dim`
    FOREIGN KEY (`id_location_dim`)
    REFERENCES `cobra`.`location_dim` (`id_location_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;





-- -----------------------------------------------------
-- Table `cobra`.`source_dim`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`source_dim` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`source_dim` (
  `id_source_dim` INT NOT NULL AUTO_INCREMENT,
  `source_type` VARCHAR(45) NULL,
  `gcd_link` VARCHAR(45) NULL,
  `series_title` VARCHAR(45) NULL,
  `issue_number` VARCHAR(45) NULL,
  `pub_date` VARCHAR(45) NULL,
  `page_num` VARCHAR(45) NULL,
  PRIMARY KEY (`id_source_dim`))
ENGINE = InnoDB;

SHOW WARNINGS;






-- -----------------------------------------------------
-- Table `cobra`.`letter_dim`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`letter_dim` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`letter_dim` (
  `id_letter_dim` INT NOT NULL AUTO_INCREMENT,
  `letter_pg_title` VARCHAR(45) NULL,
  `letter_text` VARCHAR(255) NULL,
  `letter_note` VARCHAR(255) NULL,
  PRIMARY KEY (`id_letter_dim`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `cobra`.`review_dim`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`review_dim` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`review_dim` (
  `id_review_dim` INT NOT NULL AUTO_INCREMENT,
  `review_title` VARCHAR(45) NULL,
  `review_text` VARCHAR(255) NULL,
  `review_note` VARCHAR(255) NULL,
  PRIMARY KEY (`id_review_dim`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `cobra`.`contest_dim`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`contest_dim` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`contest_dim` (
  `id_contest_dim` INT NOT NULL AUTO_INCREMENT,
  `contest_name` VARCHAR(45) NULL,
  `contest_assoc` VARCHAR(45) NULL,
  `contest_notes` VARCHAR(45) NULL,
  PRIMARY KEY (`id_contest_dim`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `cobra`.`club_dim`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`club_dim` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`club_dim` (
  `id_club_dim` INT NOT NULL AUTO_INCREMENT,
  `fan_club_name` VARCHAR(45) NULL,
  `fan_club_abbr` VARCHAR(45) NULL,
  `fan_club_assoc` VARCHAR(45) NULL,
  `fan_club_notes` VARCHAR(255) NULL,
  PRIMARY KEY (`id_club_dim`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `cobra`.`meeting_dim`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`meeting_dim` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`meeting_dim` (
  `id_meeting_dim` INT NOT NULL AUTO_INCREMENT,
  `mtg_name` VARCHAR(45) NULL,
  `mtg_start` VARCHAR(45) NULL,
  `mtg_end` VARCHAR(45) NULL,
  `mtg_notes` VARCHAR(255) NULL,
  PRIMARY KEY (`id_meeting_dim`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `cobra`.`mention_dim`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`mention_dim` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`mention_dim` (
  `id_mention_dim` INT NOT NULL AUTO_INCREMENT,
  `mention_col_title` VARCHAR(45) NULL,
  `mention_desc` VARCHAR(255) NULL,
  `mention_notes` VARCHAR(255) NULL,
  PRIMARY KEY (`id_mention_dim`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `cobra`.`classified_dim`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`classified_dim` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`classified_dim` (
  `id_classified_dim` INT NOT NULL AUTO_INCREMENT,
  `classified_title` VARCHAR(45) NULL,
  `classified_notes` VARCHAR(255) NULL,
  PRIMARY KEY (`id_classified_dim`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `cobra`.`pen_pals_dim`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`pen_pals_dim` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`pen_pals_dim` (
  `id_pen_pals_dim` INT NOT NULL AUTO_INCREMENT,
  `penpals_title` VARCHAR(45) NULL,
  `penpals_notes` VARCHAR(255) NULL,
  PRIMARY KEY (`id_pen_pals_dim`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `cobra`.`traces_dim`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`traces_dim` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`traces_dim` (
  `id_traces_dim` INT NOT NULL AUTO_INCREMENT,
  `traces_col_title` VARCHAR(45) NULL,
  `traces_notes` VARCHAR(255) NULL, 
  PRIMARY KEY (`id_traces_dim`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `cobra`.`activity_fact`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`activity_fact` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`activity_fact` (
  `id_activity_fact` INT NOT NULL AUTO_INCREMENT,
  `fact_person` INT,
  `fact_occu` INT,
  `fact_person_occu` INT,
  `fact_grade` INT,
  `fact_person_grade` INT,
  `fact_gender` INT,
  `fact_person_gender` INT,
  `fact_location` INT,
  `fact_phys_loc` INT,
  `fact_letter` INT,
  `fact_review` INT,
  `fact_contest` INT,
  `fact_club` INT,
  `fact_meeting` INT,
  `fact_mention` INT,
  `fact_classified` INT,
  `fact_pen_pals` INT,
  `fact_traces` INT,
  `fact_source` INT,
  PRIMARY KEY (`id_activity_fact`),
  INDEX `fk_activity_fact_person_dim_idx` (`fact_person` ASC),
  INDEX `fk_activity_fact_occu_idx` (`fact_occu` ASC),
  INDEX `fk_activity_fact_person_occu_idx` (`fact_person_occu` ASC),
  INDEX `fk_activity_fact_grade_idx` (`fact_grade` ASC),
  INDEX `fk_activity_fact_person_grade_idx` (`fact_person_grade` ASC),
  INDEX `fk_activity_fact_gender_idx` (`fact_gender` ASC),
  INDEX `fk_activity_fact_person_gender_idx` (`fact_person_gender` ASC),
  INDEX `fk_activity_fact_location_dim1_idx` (`fact_location` ASC),
  INDEX `fk_activity_fact_phys_loc_dim1_idx` (`fact_phys_loc` ASC),
  INDEX `fk_activity_fact_letter_dim1_idx` (`fact_letter` ASC),
  INDEX `fk_activity_fact_review_dim1_idx` (`fact_review` ASC),
  INDEX `fk_activity_fact_contest_dim1_idx` (`fact_contest` ASC),
  INDEX `fk_activity_fact_club_dim1_idx` (`fact_club` ASC),
  INDEX `fk_activity_fact_meeting_dim1_idx` (`fact_meeting` ASC),
  INDEX `fk_activity_fact_mention_dim1_idx` (`fact_mention` ASC),
  INDEX `fk_activity_fact_classified_dim1_idx` (`fact_classified` ASC),
  INDEX `fk_activity_fact_pen_pals_dim1_idx` (`fact_pen_pals` ASC),
  INDEX `fk_activity_fact_traces_dim1_idx` (`fact_traces` ASC),
  INDEX `fk_activity_fact_source_dim1_idx` (`fact_source` ASC),
  CONSTRAINT `fk_activity_fact_person_dim`
    FOREIGN KEY (`fact_person`)
    REFERENCES `cobra`.`person_dim` (`id_person_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_fact_occu`
    FOREIGN KEY (`fact_occu`)
    REFERENCES `cobra`.`occu_dim` (`id_occu_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_fact_person_occu`
    FOREIGN KEY (`fact_person_occu`)
    REFERENCES `cobra`.`person_occu` (`id_person_occu`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_fact_grade`
    FOREIGN KEY (`fact_grade`)
    REFERENCES `cobra`.`grade_dim` (`id_grade_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_fact_person_grade`
    FOREIGN KEY (`fact_person_grade`)
    REFERENCES `cobra`.`person_grade` (`id_person_grade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_fact_gender`
    FOREIGN KEY (`fact_gender`)
    REFERENCES `cobra`.`gender_dim` (`id_gender_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_fact_person_gender`
    FOREIGN KEY (`fact_person_gender`)
    REFERENCES `cobra`.`person_gender` (`id_person_gender`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_fact_location_dim1`
    FOREIGN KEY (`fact_location`)
    REFERENCES `cobra`.`location_dim` (`id_location_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_fact_phys_loc_dim1`
    FOREIGN KEY (`fact_phys_loc`)
    REFERENCES `cobra`.`phys_loc_dim` (`id_phys_loc_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_fact_letter_dim1`
    FOREIGN KEY (`fact_letter`)
    REFERENCES `cobra`.`letter_dim` (`id_letter_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_fact_review_dim1`
    FOREIGN KEY (`fact_review`)
    REFERENCES `cobra`.`review_dim` (`id_review_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_fact_contest_dim1`
    FOREIGN KEY (`fact_contest`)
    REFERENCES `cobra`.`contest_dim` (`id_contest_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_fact_club_dim1`
    FOREIGN KEY (`fact_club`)
    REFERENCES `cobra`.`club_dim` (`id_club_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_fact_meeting_dim1`
    FOREIGN KEY (`fact_meeting`)
    REFERENCES `cobra`.`meeting_dim` (`id_meeting_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_fact_mention_dim1`
    FOREIGN KEY (`fact_mention`)
    REFERENCES `cobra`.`mention_dim` (`id_mention_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_fact_classified_dim1`
    FOREIGN KEY (`fact_classified`)
    REFERENCES `cobra`.`classified_dim` (`id_classified_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_fact_pen_pals_dim1`
    FOREIGN KEY (`fact_pen_pals`)
    REFERENCES `cobra`.`pen_pals_dim` (`id_pen_pals_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_fact_traces_dim1`
    FOREIGN KEY (`fact_traces`)
    REFERENCES `cobra`.`traces_dim` (`id_traces_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_fact_source_dim1`
    FOREIGN KEY (`fact_source`)
    REFERENCES `cobra`.`source_dim` (`id_source_dim`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;



-- -----------------------------------------------------
-- Table `cobra`.`master_audit`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cobra`.`master_audit` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cobra`.`master_audit` (
  `id_master_audit` INT NOT NULL AUTO_INCREMENT,
  `table_name` VARCHAR(45) NOT NULL,
  `record_id` VARCHAR(45) NOT NULL, 
  `created_by` VARCHAR(45) NOT NULL,
  `created_on` DATETIME NOT NULL,
  `modified_by` VARCHAR(45) NULL,
  `modified_on` DATETIME NULL,
  PRIMARY KEY (`id_master_audit`))
ENGINE = InnoDB;

SHOW WARNINGS;


-- -----------------------------------------------------
-- Insert statements
-- -----------------------------------------------------

INSERT INTO `cobra`.`members` VALUES(1, 'Grace', 'ghthomas@indiana.edu', '3cbcc875ebe5dcf02dcce451b8c3808317e15a42e032d7fa4916f245210d3f46e7c39e5302e98837a680b9019fab90ffef28de5de995d9e3e05e5ab9691f6ea6',
'a96c59e115dd75725263bd13cad26827a3efa2a09f86914956088d949a3f0450b4c9c3a904be4f021e84ec925bfb1262bbc343b028491ec17baa01aff3b1a430');
















